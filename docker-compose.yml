version: "3"
# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
services:
  grafana:
      image: grafana/grafana:latest
      container_name: grafana
      restart: unless-stopped
      volumes:
        - ./provisioning/datasources:/etc/grafana/provisioning/datasources:rw
        - ./grafana-data:/var/lib/grafana:rw
      networks: 
        - web-secure
        - monitoring-stack
      labels:
        - "traefik.enable=true"

       # web interface
        - "traefik.http.routers.grafana-secure.rule=Host(`grafana.cloud-migrations.nl`)"
        - "traefik.http.routers.grafana-secure.tls.certresolver=production"
        - "traefik.http.routers.grafana-secure.tls=true"
        - "traefik.http.routers.grafana-secure.entrypoints=web-secure"
        - "traefik.http.services.grafana-secure.loadbalancer.server.port=3000" #port to the webservice
       
  mongodb:
      image: mongo:3
      #DB in share for persistence
      volumes:
        - /video/graylog/mongodb:/data/db
      networks: 
        - web-secure
        - monitoring-stack
        
  graylog:
      image: graylog/graylog:4.3
      #journal and config directories in local NFS share for persistence
      volumes:
         - /video/graylog/journal:/usr/share/graylog/data/journal
         - /video/graylog/config:/usr/share/graylog/data/config
      environment:
        # CHANGE ME (must be at least 16 characters)!
        - GRAYLOG_PASSWORD_SECRET=forpasswordencryption
        - Password: admin
        - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
        - GRAYLOG_HTTP_BIND_ADDRESS=0.0.0.0:7555
        - GRAYLOG_HTTP_EXTERNAL_URI=https://graylog.cloud-migrations.nl
        - GRAYLOG_TRANSPORT_EMAIL_WEB_INTERFACE_URL=http://192.168.2.3:7555
        - GRAYLOG_TRANSPORT_EMAIL_HOSTNAME=smtp.example.com
        - GRAYLOG_TRANSPORT_EMAIL_ENABLED=true
        - GRAYLOG_TRANSPORT_EMAIL_PORT=25
        - GRAYLOG_TRANSPORT_EMAIL_USE_AUTH=false
        - GRAYLOG_TRANSPORT_EMAIL_USE_TLS=false
        - GRAYLOG_TRANSPORT_EMAIL_USE_SSL=false
        - GRAYLOG_TRANSPORT_FROM_EMAIL=youremail@yourdomain.com
        - GRAYLOG_TRANSPORT_SUBJECT_PREFIX=[graylog]
      links:
        - mongodb:mongo
        - elasticsearch
      depends_on:
        - mongodb
        - elasticsearch
      ports:
        # Graylog web interface and REST API
        - 7555:7555
        # Syslog TCP
        - 8514:8514
        # Syslog UDP
        - 8514:8514/udp
        # GELF TCP
        - 12201:12201
        # GELF UDP
        - 12201:12201/udp
      networks: 
        - web-secure
        - monitoring-stack
      labels:
        - "traefik.enable=true"

        # web interface
        - "traefik.http.routers.graylog-secure.rule=Host(`graylog.cloud-migrations.nl`)"
        - "traefik.http.routers.graylog-secure.tls.certresolver=production"
        - "traefik.http.routers.graylog-secure.tls=true"
        - "traefik.http.routers.graylog-secure.entrypoints=web-secure"
        - "traefik.http.services.graylog-secure.loadbalancer.server.port=7555" #port to the webservice

  elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:8.4.1
      container_name: grafana.elasticsearch
      restart: unless-stopped
      ports:
        - 9200:9200
      environment:
        - discovery.type=single-node
        - xpack.security.enabled=false
        - xpack.security.enrollment.enabled=true
      volumes:
        - ./elasticsearch-data:/usr/share/elasticsearch/data
      networks: 
        - web-secure
        - monitoring-stack
      labels:
        - "traefik.enable=true"

        # web interface
        - "traefik.http.routers.elasticsearch-secure.rule=Host(`elasticsearch.cloud-migrations.nl`)"
        - "traefik.http.routers.elasticsearch-secure.tls.certresolver=production"
        - "traefik.http.routers.elasticsearch-secure.tls=true"
        - "traefik.http.routers.elasticsearch-secure.entrypoints=web-secure"
        - "traefik.http.services.elasticsearch-secure.loadbalancer.server.port=9200" #port to the webservice

  # kibana:
  #   image: kibana:8.4.1
  #   container_name: grafana.kibana
  #   restart: unless-stopped
  #   ports:
  #     - 5601:5601
  #   networks: 
  #     - web-secure
  #   labels:
  #     - "traefik.enable=true"

  #     # web interface
  #     - "traefik.http.routers.kibana-secure.rule=Host(`kibana.cloud-migrations.nl`)"
  #     - "traefik.http.routers.kibana-secure.tls.certresolver=production"
  #     - "traefik.http.routers.kibana-secure.tls=true"
  #     - "traefik.http.routers.kibana-secure.entrypoints=web-secure"
  #     - "traefik.http.services.kibana-secure.loadbalancer.server.port=5601" #port to the webservice

  # metricbeat:
  #   image: docker.elastic.co/beats/metricbeat:7.11.1
  #   restart: unless-stopped
  #   container_name: grafana.metricbeat
  #   environment:
  #     - KIBANA_HOST=http://localhost:9200
  #   volumes:
  #     - ./metricbeat-data:/usr/share/metricbeat/data/
  #   networks:
  #     - web-secure

  prometheus:
    image: prom/prometheus
    container_name: grafana.prometheus
    restart: always
    volumes:
      - ./prometheus:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks: 
      - monitoring-stack
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor

  node-exporter:
    container_name: grafana.node-exporter
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    ports:
      - 9100:9100
    networks: 
      - monitoring-stack
    restart: always
    deploy:
      mode: global

  alertmanager:
    container_name: grafana.alertmanager
    image: prom/alertmanager
    restart: always
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks: 
      - monitoring-stack
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  cadvisor:
    container_name: grafana.cadvisor
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    restart: always
    deploy:
      mode: global
    networks: 
      - monitoring-stack

networks: 
  web-secure:
    external: true
  monitoring-stack:
    external: true
